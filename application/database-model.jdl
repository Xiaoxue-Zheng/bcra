/* Questionnaire, QuestionSection, QuestionGroup, Question, QuestionItem */
entity Questionnaire {
	type QuestionnaireType required
    version Integer required
}

enum QuestionnaireType {
    CONSENT_FORM,
    RISK_ASSESSMENT
}

enum Algorithm {
    TYRER_CUZICK
}

entity QuestionSection {
	identifier QuestionSectionIdentifier required unique
    title String required
    order Integer required
    url String required
    progress Integer required
}

relationship OneToMany {
    Questionnaire{questionSection} to QuestionSection{questionnaire required}
}

relationship OneToMany {
    QuestionSection{displayCondition} to DisplayCondition{questionSection}
    QuestionSection{referralCondition} to ReferralCondition{questionSection}
}

enum QuestionSectionIdentifier {
    CONSENT_FORM,
    FAMILY_AFFECTED,
    FAMILY_BREAST,
    FAMILY_OVARIAN,
    FAMILY_AFFECTED_GRANDMOTHER,
    FAMILY_AFFECTED_AUNT,
    FAMILY_AFFECTED_NIECE,
    FAMILY_AFFECTED_HALF_SISTER,
    PERSONAL_HISTORY,
    FAMILY_AFFECTED_CONTEXT,
    PERSONAL_HISTORY_CONTEXT
}

entity QuestionGroup {
	identifier QuestionGroupIdentifier required unique
}

relationship OneToMany {
    QuestionGroup{questionSection} to QuestionSection{questionGroup required}
}

enum QuestionGroupIdentifier {
    CONSENT_FORM_QUESTIONS,
    FAMILY_AFFECTED_QUESTIONS,
    FAMILY_BREAST_QUESTIONS,
    FAMILY_OVARIAN_QUESTIONS,
    FAMILY_AFFECTED_GRANDMOTHER_QUESTIONS,
    FAMILY_AFFECTED_AUNT_QUESTIONS,
    FAMILY_AFFECTED_NIECE_QUESTIONS,
    FAMILY_AFFECTED_HALF_SISTER_QUESTIONS,
    PERSONAL_HISTORY_QUESTIONS,
    FAMILY_AFFECTED_CONTEXT_PLACEHOLDER,
    PERSONAL_HISTORY_CONTEXT_PLACEHOLDER
}

entity Question {
    identifier QuestionIdentifier required unique
    type QuestionType required
    order Integer required
	text String required
    variableName String
    minimum Integer
    maximum Integer
    hint String
    hintText String
}

relationship OneToMany {
    QuestionGroup{question} to Question{questionGroup required}
}

relationship OneToMany {
    Question{displayCondition} to DisplayCondition{question}
}

enum QuestionIdentifier {
    CONSENT_INFO_SHEET,
    CONSENT_WITHDRAWAL,
    CONSENT_DATA_TRUST,
    CONSENT_DATA_RESEARCH,
    CONSENT_DATA_UOM,
    CONSENT_DATA_COMMERCIAL,
    CONSENT_INFORM_GP,
    CONSENT_TAKE_PART,
    CONSENT_BY_LETTER,
    CONSENT_FUTURE_RESEARCH,

    FAMILY_BREAST_AFFECTED,
    FAMILY_BREAST_HOW_MANY,
    FAMILY_BREAST_AGE,
    FAMILY_OVARIAN_AFFECTED,
    FAMILY_OVARIAN_HOW_MANY,
    FAMILY_OVARIAN_AGE,
    FAMILY_AFFECTED_GRANDMOTHER_SIDE,
    FAMILY_AFFECTED_GRANDMOTHER_MOTHERS_AGE,
    FAMILY_AFFECTED_AUNT_SIDE,
    FAMILY_AFFECTED_AUNT_MOTHERS_AGE,
    FAMILY_AFFECTED_NIECE_SIDE,
    FAMILY_AFFECTED_NIECE_SISTERS_AGE,
    FAMILY_AFFECTED_HALFSISTER_SIDE,
    FAMILY_AFFECTED_HALFSISTER_MOTHERS_AGE,

    SELF_FIRST_PERIOD,
    SELF_PREMENOPAUSAL,
    SELF_MENOPAUSAL_AGE,
    SELF_PREGNANCIES,
    SELF_PREGNANCY_FIRST_AGE,
    SELF_HEIGHT,
    SELF_WEIGHT,
    SELF_BREAST_BIOPSY,
    SELF_BREAST_BIOPSY_DIAGNOSIS_RISK,
    SELF_BREAST_BIOPSY_DIAGNOSIS_TYPES,
    SELF_ASHKENAZI
}

enum QuestionType {
    TICKBOX_CONSENT,
    CHECKBOX,
    RADIO,
    NUMBER,
    NUMBER_UNKNOWN,
    NUMBER_WEIGHT,
    NUMBER_HEIGHT,
    DROPDOWN_NUMBER
}

entity QuestionItem {
    identifier QuestionItemIdentifier required unique
    order Integer required
    label String required
    necessary Boolean
    exclusive Boolean
}

relationship OneToMany {
    Question{questionItem} to QuestionItem{question required}
}

enum QuestionItemIdentifier {
    CONSENT_INFO_SHEET_YES,
    CONSENT_INFO_SHEET_NO,

    CONSENT_FUTURE_RESEARCH_YES,
    CONSENT_FUTURE_RESEARCH_NO,

    FAMILY_BREAST_AFFECTED_MOTHER,
    FAMILY_BREAST_AFFECTED_GRANDMOTHER,
    FAMILY_BREAST_AFFECTED_SISTER,
    FAMILY_BREAST_AFFECTED_HALFSISTER,
    FAMILY_BREAST_AFFECTED_AUNT,
    FAMILY_BREAST_AFFECTED_NIECE,
    FAMILY_BREAST_AFFECTED_FATHER,
    FAMILY_BREAST_AFFECTED_BROTHER,
    FAMILY_BREAST_AFFECTED_UNKNOWN,

    FAMILY_BREAST_HOW_MANY_ONE,
    FAMILY_BREAST_HOW_MANY_MORE,

    FAMILY_OVARIAN_AFFECTED_MOTHER,
    FAMILY_OVARIAN_AFFECTED_GRANDMOTHER,
    FAMILY_OVARIAN_AFFECTED_SISTER,
    FAMILY_OVARIAN_AFFECTED_HALFSISTER,
    FAMILY_OVARIAN_AFFECTED_AUNT,
    FAMILY_OVARIAN_AFFECTED_NIECE,
    FAMILY_OVARIAN_AFFECTED_UNKNOWN,

    FAMILY_OVARIAN_HOW_MANY_ONE,
    FAMILY_OVARIAN_HOW_MANY_MORE,

    FAMILY_AFFECTED_GRANDMOTHER_SIDE_MOTHER,
    FAMILY_AFFECTED_GRANDMOTHER_SIDE_FATHER,

    FAMILY_AFFECTED_AUNT_SIDE_MOTHER,
    FAMILY_AFFECTED_AUNT_SIDE_FATHER,

    FAMILY_AFFECTED_NIECE_SIDE_SISTER,
    FAMILY_AFFECTED_NIECE_SIDE_BROTHER,

    FAMILY_AFFECTED_HALFSISTER_SIDE_MOTHER,
    FAMILY_AFFECTED_HALFSISTER_SIDE_FATHER,

    SELF_PREMENOPAUSAL_YES,
    SELF_PREMENOPAUSAL_NO,
    SELF_PREMENOPAUSAL_UNKNOWN,

    SELF_BREAST_BIOPSY_YES,
    SELF_BREAST_BIOPSY_NO,
    SELF_BREAST_BIOPSY_UNKNOWN,

    SELF_BREAST_BIOPSY_DIAGNOSIS_RISK_YES,
    SELF_BREAST_BIOPSY_DIAGNOSIS_RISK_NO,
    SELF_BREAST_BIOPSY_DIAGNOSIS_RISK_UNKNOWN,

    SELF_BREAST_BIOPSY_DIAGNOSIS_TYPES_ADH,
    SELF_BREAST_BIOPSY_DIAGNOSIS_TYPES_LCIS,
    SELF_BREAST_BIOPSY_DIAGNOSIS_TYPES_ALH,
    SELF_BREAST_BIOPSY_DIAGNOSIS_TYPES_OTHER,
    SELF_BREAST_BIOPSY_DIAGNOSIS_TYPES_UNKNOWN,

    SELF_ASHKENAZI_YES,
    SELF_ASHKENAZI_NO,
    SELF_ASHKENAZI_UNKNOWN
}


/* AnswerResponse, AnswerSection, AnswerGroup, Answer, AnswerItem */
entity AnswerResponse {
    state ResponseState required
    status String
}

enum ResponseState {
    NOT_STARTED,
    IN_PROGRESS,
    SUBMITTED,
    REFERRED,
    INVALID,
    VALIDATED,
    FAILED,
    PROCESSED
}

relationship ManyToOne {
    AnswerResponse{questionnaire required} to Questionnaire
}

entity AnswerSection {
}

relationship OneToMany {
    AnswerResponse{answerSection} to AnswerSection{answerResponse required}
}

relationship ManyToOne {
    AnswerSection{questionSection required} to QuestionSection
}

entity AnswerGroup {
    order Integer required
}

relationship OneToMany {
    AnswerSection{answerGroup} to AnswerGroup{answerSection required}
}

entity Answer {
    number Integer
    ticked Boolean
    units AnswerUnits
}

relationship OneToMany {
    AnswerGroup{answer} to Answer{answerGroup required}
}

relationship ManyToOne {
    Answer{question required} to Question
}

enum AnswerUnits {
    KILOS,
    POUNDS,
    CENTIMETERS,
    INCHES
}

entity AnswerItem {
    selected Boolean required
}

relationship OneToMany {
    Answer{answerItem} to AnswerItem{answer required}
}

relationship ManyToOne {
    AnswerItem{questionItem required} to QuestionItem
}


/* Conditions */
entity DisplayCondition {
    questionIdentifier QuestionIdentifier
    itemIdentifier QuestionItemIdentifier
}

entity ReferralCondition {
    andGroup Integer
    type ReferralConditionType required
    questionIdentifier QuestionIdentifier
    itemIdentifier QuestionItemIdentifier
    number Integer
    reason String
}

enum ReferralConditionType {
    ITEMS_AT_LEAST,
    ITEM_SPECIFIC,
    VALUE_UNDER
}


/* CSV Files */
entity CsvFile {
    state CsvFileState required
    status String
    fileName String minlength(5) required unique
    uploadDatetime Instant required
}

enum CsvFileState {
    UPLOADED,
    INVALID,
    CREATION_ERROR,
    COMPLETED
}

entity CsvContent {
  data Blob required
}

relationship OneToOne {
  CsvFile{content} to CsvContent{csvFile required}
}


/* Participants */
entity Participant {
    registerDatetime Instant
    lastLoginDatetime Instant
}

enum ParticipantStatusType {
    CSV_LOADED,
    REGISTERED,
    PART_COMPLETED,
    COMPLETED_REJECT,
    COMPLETED_ACCEPT
}

relationship OneToOne {
    Participant{user(login) required} to User
}

entity IdentifiableData{
    nhsNumber String required unique minlength(10) maxlength(10)
    dateOfBirth LocalDate required
    firstname String required
    surname String required
    email String maxlength(254)
    address1 String required
    address2 String
    address3 String
    address4 String
    address5 String
    postcode String required minlength(6) maxlength(8)
    practiceName String required
}

relationship OneToOne {
    Participant{identifiableData required} to IdentifiableData
}

relationship ManyToOne {
    Participant{CsvFile(fileName)} to CsvFile
}

/* Procedure */
entity Procedure

relationship OneToOne {
    Participant{procedure required} to Procedure{participant required}
    Procedure{consentResponse required} to AnswerResponse
    Procedure{riskAssessmentResponse required} to AnswerResponse
}

/* Generation */
dto * with mapstruct
service * with serviceImpl

paginate Participant with pagination

filter Participant
